group = 'twitter-politics'
version = '0.1'

ext {
    log4jVersion = '2.2'
    scalaMajor = '2.10'
    scalaMinor = '5'
    scalaVersion = scalaMajor + '.' + scalaMinor
    jacksonVersion = '2.5.1'
    elasticsearchVersion = '1.5.0'
    sparkVersion = '1.3.0'
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'idea'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
//    maven { url { "http://repo.springsource.org/milestone" } }

    maven { url { "https://repository.apache.org/content/repositories/releases" } }
    maven { url { "http://repo.typesafe.com/typesafe/releases" } }
    maven { url { "http://repo.typesafe.com/typesafe/maven-releases/" } }
    maven { url { "https://oss.sonatype.org/content/groups/scala-tools" } }
    // cascading
    maven { url { "http://conjars.org/repo" } }
    maven { url { "http://clojars.org/repo" }}

    maven { url { "http://maven.twttr.com" } }
    maven { url { "http://twitter4j.org/maven2" } }
}

configurations {
    // Exclusions from hell
    all*.exclude group: "javax.jms",    module:"jms"
    all*.exclude group: "com.sun.jdmk", module:"jmxtools"
    all*.exclude group: "com.sun.jmx",  module:"jmxri"
}

dependencies {
    // Scala
    compile group: 'org.scala-lang', name:'scala-library', version: "$scalaVersion"

    // JSON utilities
//    compile group: 'com.fasterxml.jackson.module', name:'jackson-module-scala_' + scalaMajor, version:"$jacksonVersion"
//    compile group: 'com.fasterxml.jackson.core',   name:'jackson-core',                       version:"$jacksonVersion"
//    compile group: 'com.fasterxml.jackson.core',   name:'jackson-databind',                   version:"$jacksonVersion"

    // Log4j
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'org.apache.logging.log4j', name:'log4j-api',        version: "$log4jVersion"
    compile group: 'org.apache.logging.log4j', name:'log4j-core',       version: "$log4jVersion"
    // This routes requests to log4j 1.2 to log4j2. LEAVE IT BE
    compile group: 'org.apache.logging.log4j', name:'log4j-1.2-api',    version: "$log4jVersion"

    compile group: "org.apache.spark", name:  "spark-core_"      + scalaMajor , version: "$sparkVersion"
    compile group: "org.apache.spark", name:  "spark-streaming_" + scalaMajor , version: "$sparkVersion"
    compile (group: "org.apache.spark" , name: "spark-streaming-twitter_" + scalaMajor , version: "$sparkVersion") {
        exclude group: "org.twitter4j"
    }

    compile group: "com.twitter.elephantbird", name: "elephant-bird" , version: "4.5"
    compile group: "com.twitter.elephantbird", name: "elephant-bird-core" , version: "4.5"
    compile group: "org.twitter4j", name: "twitter4j-stream" , version: "3.0.6"

    compile group: 'org.elasticsearch', name: 'elasticsearch', version: "$elasticsearchVersion"
    compile (group: 'org.elasticsearch', name: 'elasticsearch-hadoop', version: "2.1.0.Beta3") {
        exclude group: "org.apache.hive"
        exclude group: "cascading"
        exclude group: "org.apache.spark"
        exclude group: "org.apache.storm"
        exclude group: "org.apache.pig"
    }
}

// Always copy files from root resources dir
processResources {
    from ("$rootDir/src/main/resources") {
        include '*.txt'
        include '*.xml'
        include '*.conf'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.airtonjal.Main'
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    zip64 = true
    archiveName "twitter-politics-fat-${version}.jar"
    duplicatesStrategy = 'include'
    manifest {
        attributes 'Implementation-Title': 'Twitter politics fat jar',
                'Implementation-Version': version,
                'Main-Class': 'com.airtonjal.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
